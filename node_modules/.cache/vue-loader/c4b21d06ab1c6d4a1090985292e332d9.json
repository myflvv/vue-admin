{"remainingRequest":"/home/nothing/data/vue/mall-vue3-manage/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/nothing/data/vue/mall-vue3-manage/src/components/HeadMenu.vue?vue&type=style&index=0&id=60a2c00f&lang=less","dependencies":[{"path":"/home/nothing/data/vue/mall-vue3-manage/src/components/HeadMenu.vue","mtime":1615423561118},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/css-loader/dist/cjs.js","mtime":1614068612826},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1614935255022},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/postcss-loader/src/index.js","mtime":1589968283242},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/less-loader/dist/cjs.js","mtime":1615423661887},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/cache-loader/dist/cjs.js","mtime":1589968278364},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/vue-loader-v16/dist/index.js","mtime":1614935255022}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAuaGVhZC1tZW51IHsKICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMjRweDsKICAgICAgICAuZWwtYmFkZ2VfX2NvbnRlbnQuaXMtZml4ZWQuaXMtZG90IHsKICAgICAgICAgICAgdG9wOiAxNXB4OwogICAgICAgIH0KICAgIH0K"},{"version":3,"sources":["/home/nothing/data/vue/mall-vue3-manage/src/components/HeadMenu.vue"],"names":[],"mappings":";IA8II,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACb;IACJ","file":"/home/nothing/data/vue/mall-vue3-manage/src/components/HeadMenu.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"head-menu\">\n        <el-space wrap size=\"large\">\n            <!-- 消息  -->\n            <el-popover trigger=\"hover\" placement=\"bottom\" :width=\"200\">\n                <template #reference>\n                    <el-badge type=\"danger\" is-dot>\n                        <i class=\"el-icon-message\"/>\n                    </el-badge>\n                </template>\n                <div>消息待定</div>\n            </el-popover>\n            <!-- 通知  -->\n            <el-popover trigger=\"hover\" placement=\"bottom\" :width=\"220\">\n                <template #reference>\n                    <el-badge type=\"danger\" is-dot>\n                        <i class=\"el-icon-bell\"/>\n                    </el-badge>\n                </template>\n                <div>\n                    <el-tabs v-model=\"tabsActive\" @tab-click=\"onTab\">\n                        <el-tab-pane label=\"通知\" name=\"notice\">\n                            <el-row v-for=\"(item,n) in notices\" :key=\"n\" @click=\"onManage(item.id)\">\n                                <el-col :span=\"6\">\n                                    <el-avatar :icon=\"item.icon\" :size=\"40\"></el-avatar>\n                                </el-col>\n                                <el-col :span=\"18\">\n                                    <div>{{ item.message }}</div>\n                                    <div>{{ item.dateTime }}</div>\n                                </el-col>\n                                <el-divider></el-divider>\n                            </el-row>\n                        </el-tab-pane>\n                        <el-tab-pane label=\"消息\" name=\"news\">\n                            <el-row v-for=\"(item,n) in news\" :key=\"n\" @click=\"onManage(item.id)\">\n                                <el-col :span=\"6\">\n                                    <el-avatar :icon=\"item.icon\" :size=\"40\"></el-avatar>\n                                </el-col>\n                                <el-col :span=\"18\">\n                                    <div>{{ item.message }}</div>\n                                    <div>{{ item.dateTime }}</div>\n                                </el-col>\n                                <el-divider></el-divider>\n                            </el-row>\n                        </el-tab-pane>\n                        <el-tab-pane label=\"待办\" name=\"untreated\">\n                            <el-row v-for=\"(item,u) in untreateds\" :key=\"u\" @click=\"onManage(item.id)\">\n                                <el-col :span=\"6\">\n                                    <el-avatar :icon=\"item.icon\" :size=\"40\"></el-avatar>\n                                </el-col>\n                                <el-col :span=\"18\">\n                                    <div>{{ item.message }}</div>\n                                    <div>{{ item.dateTime }}</div>\n                                </el-col>\n                                <el-divider></el-divider>\n                            </el-row>\n                        </el-tab-pane>\n                    </el-tabs>\n                </div>\n            </el-popover>\n            <!-- 个人设置  -->\n            <el-dropdown>\n                    <span class=\"el-dropdown-link\">\n                        <span>admin</span>\n                        <i class=\"el-icon-arrow-down el-icon--right\"></i>\n                    </span>\n                <template #dropdown>\n                    <el-dropdown-menu>\n                        <el-dropdown-item icon=\"el-icon-switch-button\" @click=\"logout\">退出</el-dropdown-item>\n                        <el-dropdown-item icon=\"el-icon-unlock\" @click=\"onPassword\">修改密码</el-dropdown-item>\n                    </el-dropdown-menu>\n                </template>\n            </el-dropdown>\n        </el-space>\n    </div>\n</template>\n\n<script>\n    import {onMounted, reactive, toRefs} from 'vue'\n    import {useRouter} from 'vue-router'\n\n    export default {\n        setup() {\n            const router = useRouter()\n            const state = reactive({\n                tabsActive: 'notice',\n                notices: [],\n                news: [],\n                untreateds: [],\n            })\n\n            onMounted(()=>{\n                state.notices = [\n                    {id:1,icon:'el-icon-chat-dot-round',message:'通知通知通知通知通知',dateTime:'2021-01-22 12:15:21'},\n                    {id:2,icon:'el-icon-chat-dot-round',message:'通知通知通知通知通知',dateTime:'2021-01-22 12:15:21'},\n                    {id:3,icon:'el-icon-chat-dot-round',message:'通知通知通知通知通知',dateTime:'2021-01-22 12:15:21'},\n                    {id:4,icon:'el-icon-chat-dot-round',message:'通知通知通知通知通知',dateTime:'2021-01-22 12:15:21'},\n                ]\n\n                state.news = [\n                    {id:1,icon:'el-icon-chat-dot-round',message:'消息消息消息消息消息',dateTime:'2021-01-22 12:15:21'},\n                    {id:2,icon:'el-icon-chat-dot-round',message:'消息消息消息消息',dateTime:'2021-01-22 12:15:21'},\n                    {id:3,icon:'el-icon-chat-dot-round',message:'消息消息消息消息消息',dateTime:'2021-01-22 12:15:21'},\n                    {id:4,icon:'el-icon-chat-dot-round',message:'消息消息消息消息消息消息',dateTime:'2021-01-22 12:15:21'},\n                ]\n\n                state.untreateds = [\n                    {id:1,icon:'el-icon-chat-dot-round',message:'待办待办待办待办待办',dateTime:'2021-01-22 12:15:21'},\n                    {id:2,icon:'el-icon-chat-dot-round',message:'待办待办待办待办待办待办',dateTime:'2021-01-22 12:15:21'},\n                    {id:3,icon:'el-icon-chat-dot-round',message:'待办待办待办待办待办',dateTime:'2021-01-22 12:15:21'},\n                    {id:4,icon:'el-icon-chat-dot-round',message:'待办待办待办待办待办待办',dateTime:'2021-01-22 12:15:21'},\n                ]\n            })\n\n            const onManage = (id) =>{\n                console.log(id)\n            }\n\n            const onTab = (tab, event) => {\n                console.log(tab, event);\n            }\n\n            const logout = () => {\n                router.push({path: 'login'})\n            }\n\n            const onPassword = () => {\n                router.push({path: 'user-password'})\n            }\n\n            return {\n                ...toRefs(state),\n                logout,\n                onPassword,\n                onTab,\n                onManage\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .head-menu {\n        text-align: right;\n        cursor: pointer;\n        margin-right: -24px;\n        .el-badge__content.is-fixed.is-dot {\n            top: 15px;\n        }\n    }\n</style>"]}]}