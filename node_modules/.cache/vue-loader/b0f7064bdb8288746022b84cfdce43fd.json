{"remainingRequest":"/home/nothing/data/vue/mall-vue3-manage/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/nothing/data/vue/mall-vue3-manage/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&lang=less","dependencies":[{"path":"/home/nothing/data/vue/mall-vue3-manage/src/views/Login.vue","mtime":1615423561122},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/css-loader/dist/cjs.js","mtime":1614068612826},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1614935255022},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/postcss-loader/src/index.js","mtime":1589968283242},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/less-loader/dist/cjs.js","mtime":1615423661887},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/cache-loader/dist/cjs.js","mtime":1589968278364},{"path":"/home/nothing/data/vue/mall-vue3-manage/node_modules/vue-loader-v16/dist/index.js","mtime":1614935255022}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAubG9naW4gewogICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7CgogICAgICAgIC5sb2dpbi1sb2dvIHsKICAgICAgICAgICAgd2lkdGg6IDEyMHB4OwogICAgICAgICAgICBoZWlnaHQ6IDEyMHB4OwogICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgbWFyZ2luOiAycmVtIGF1dG87CiAgICAgICAgfQoKICAgICAgICAubG9naW4tY29udGFpbmVyIHsKICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgICBsZWZ0OiA1MCU7CiAgICAgICAgICAgIHRvcDogNTAlOwogICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMzMsIDIzMywgMjMzLCAwLjMpOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjRyZW07CiAgICAgICAgICAgIGJvcmRlcjogMXB4IHdoaXRlIHNvbGlkOwogICAgICAgICAgICBwYWRkaW5nOiAwLjhyZW07CiAgICAgICAgfQoKICAgICAgICAubG9naW4tYm9keSB7CiAgICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTsKICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMzMsIDIzMywgMjMzLCAwLjYpOwogICAgICAgICAgICB3aWR0aDogMjVyZW07CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMnJlbTsKICAgICAgICB9CgogICAgICAgIC5lbC1pbnB1dF9faW5uZXIgewogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4OwogICAgICAgIH0KCiAgICAgICAgLmNvZGVJbWcgewogICAgICAgICAgICBoZWlnaHQ6IDQwcHg7CiAgICAgICAgfQoKICAgICAgICAubG9naW4tc3VibWl0IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgfQogICAgfQo="},{"version":3,"sources":["/home/nothing/data/vue/mall-vue3-manage/src/views/Login.vue"],"names":[],"mappings":"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","file":"/home/nothing/data/vue/mall-vue3-manage/src/views/Login.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"login\" :style=\"login\">\n        <el-row :gutter=\"10\" class=\"login-container\">\n            <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"validateForm\" label-width=\"1em\" class=\"login-body\"\n                     hide-required-asterisk=\"false\">\n                <el-image class=\"login-logo\" :src=\"logoImg\"></el-image>\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"loginForm.username\" prefix-icon=\"el-icon-user\" placeholder=\"请输入用户名称\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input type=\"password\" v-model=\"loginForm.password\" prefix-icon=\"el-icon-lock\" show-password\n                              placeholder=\"请输入密码\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"imgCode\">\n                    <el-row>\n                        <el-col :span=\"14\">\n                            <el-input v-model=\"loginForm.imgCode\" prefix-icon=\"el-icon-message\"\n                                      placeholder=\"请输入验证码\"></el-input>\n                        </el-col>\n                        <el-col :span=\"9\" :offset=\"1\">\n                            <VueImgVerify ref=\"verifyRef\"></VueImgVerify>\n                        </el-col>\n                    </el-row>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"text\">忘记密码？</el-button>\n                </el-form-item>\n                <el-form-item class=\"login-body-button\">\n                    <el-button class=\"login-submit\" type=\"danger\" round @click=\"submit\">登录</el-button>\n                </el-form-item>\n            </el-form>\n        </el-row>\n    </div>\n</template>\n\n<script>\n    import {onBeforeMount, reactive, ref, toRefs, unref} from \"vue\"\n    import {useRouter} from 'vue-router'\n    import {useStore} from 'vuex'\n    import {login} from '@/api/serviceApi'\n    import {ElMessage} from \"element-plus\"\n    import VueImgVerify from '@/components/VueImageVerify'\n\n    export default {\n        setup() {\n            const router = useRouter()\n            const store = useStore()\n            const validateForm = ref(null)\n            const verifyRef = ref(null)\n            const state = reactive({\n                login: {\n                    height: '',\n                    backgroundImage: 'url(' + require('@/assets/image/login_bj.png') + ')'\n                },\n                logoImg: require('@/assets/image/logo.png'),\n                loginForm: {\n                    username: '',\n                    password: '',\n                    imgCode: ''\n                },\n            })\n\n            const rules = {\n                username: [\n                    {required: true, message: '用户名称不能为空', trigger: 'blur'}\n                ],\n                password: [\n                    {required: true, message: '密码不能为空', trigger: 'blur'}\n                ],\n                imgCode: [\n                    {required: true, message: '验证码不能为空', trigger: 'blur'}\n                ]\n            }\n\n            onBeforeMount(() => {\n                state.login.height = document.body.clientHeight + \"px\"\n            })\n\n            const submit = async () => {\n                const form = unref(validateForm)\n                if (!form) {\n                    return\n                }\n                await form.validate()\n\n                // 校验验证码\n                const _imgCode = verifyRef.value.imgCode || ''\n                if (_imgCode.toLowerCase() != state.loginForm.imgCode.toLowerCase()) {\n                    ElMessage({showClose: true, message: '验证码有误，请重新输入!', type: 'error'})\n                    return\n                }\n\n                console.log(state.loginForm)\n\n                login(state.loginForm).then(res => {\n                    if (res.code === 200) {\n                        // 登录成功后设置token到vuex中\n                        localStorage.username = res.data.username\n                        store.commit('setToken', res.data.token)\n                        router.push({path: 'home'})\n                    } else {\n                        ElMessage({showClose: true, message: res.data, type: 'error'})\n                    }\n                })\n            }\n\n            return {\n                ...toRefs(state),\n                rules,\n                validateForm,\n                verifyRef,\n                submit,\n            }\n        },\n        components: {\n            VueImgVerify\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .login {\n        background-size: cover;\n\n        .login-logo {\n            width: 120px;\n            height: 120px;\n            display: block;\n            margin: 2rem auto;\n        }\n\n        .login-container {\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            background: rgba(233, 233, 233, 0.3);\n            border-radius: 0.4rem;\n            border: 1px white solid;\n            padding: 0.8rem;\n        }\n\n        .login-body {\n            padding: 1rem 2rem;\n            background: rgba(233, 233, 233, 0.6);\n            width: 25rem;\n            border-radius: 0.2rem;\n        }\n\n        .el-input__inner {\n            border-radius: 20px;\n        }\n\n        .codeImg {\n            height: 40px;\n        }\n\n        .login-submit {\n            width: 100%;\n        }\n    }\n</style>"]}]}